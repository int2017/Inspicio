@model Inspicio.Controllers.ImagesController.CreatePageModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<form asp-action="Create">
    <div class="form-horizontal ">
        <h4>Image</h4>
        <hr />

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row ">
            <div class="col-md-10 text-center row">


                <div class="form-group">         
                    <div class="col-md-8 ">
                        <input asp-for="@Model.Image.Title" class="form-control" placeholder="Review Title" />
                        <span asp-validation-for="@Model.Image.Title" class="text-danger"></span>
                    </div>
                </div>


                <div class="form-group">   
                    <div class="col-md-8 ">
                        <textarea rows="5" asp-for="@Model.Image.Description" class="form-control" placeholder="Review Description" ></textarea>
                        <span asp-validation-for="@Model.Image.Description" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-8">
                        <div>
                           
                            <!-- checkboxs -->
                            <ul>
                                @for (var i = 0; i < Model.Users.Count; i++)
                                {
                                    <li>
                                        <input type="checkbox" asp-for="@Model.Users[i].IsSelected" />
                                        <label asp-for="@Model.Users[i].IsSelected">@Model.Users[i].Email</label>
                                        <input type="hidden" asp-for="@Model.Users[i].Id" />
                                    </li>
                                }
                            </ul>
                            <!-- checkboxs end -->

                        </div>
                    </div>
                </div>
               

                <!--input below will be used to temp store the base64 encoding of the image-->
                <input id="b64" asp-for="@Model.Image.Content" type="hidden" />


                <div id="dropzoneDiv">
                    <div class="dropzone needsclick dz-clickable" id="uploader">
                        <div class="dz-message needsclick">
                            Drop files here or click to upload.
                            <br>
                        </div>
                    </div>
                </div>


                <div class="form-group" style="margin-top:15px;">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>


            </div>
        </div>
    </div>
</form>

               
<div>
    <a asp-action="Index">Back to List</a>
</div>


<!-- SCRIPTS -->
<!--encodeBase64
    This function take the chosen file (image file) and 
    converts it to base64encoding. This is then used to 
    set a temp input tag value. This is then sent to 
    the server when create new is pressed.
-->
<script>

    function encodeBase64(file) {

        if (file)
        {           
            var FR = new FileReader();
            FR.addEventListener("load", function (e) {

                document.getElementById("b64").value = e.target.result;
                $(".dropzone").css("background-image", "url(" + e.target.result + ")");
            });

            FR.readAsDataURL(file);
        }  
    }

    Dropzone.autoDiscover = false;
    var myDropzone = new Dropzone(".dropzone", {

        maxFiles: 1,
        autoProcessQueue: false,
        thumbnailWidth: null,
        thumbnailHeight: null,
        init: function () {

            this.on("addedfile", function (file) {

                encodeBase64(myDropzone.files[0]);  
            });
        },

        // Function to be called on the server
        url: "doNothing"
    });

    myDropzone.on("maxfilesexceeded", function (file) { this.removeFile(file); });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}