@model List<Inspicio.Models.ReviewViewModels.IndexModel>
@inject UserManager<ApplicationUser> UserManager


<h2>View All Reviews</h2>

<p>
    <a asp-action="Create">Create Review</a>
</p>
<p>
    <input type="text" id="myInput" placeholder="Search for reviews..">
</p>

<table id="table">
    <thead>
        <tr class="header" style="border-bottom: solid; border-width: 3px;">
            <th id="content">
                Content
            </th>
            <th class="TitleHeader" style="cursor: pointer;">
                Title
            </th>
            <th class="CreatorHeader" id="creator" style="cursor: pointer;">
                Creator
            </th>
            <th id="up-col">
                <img src="~/images/thumbup.jpg" style="height: 20px;" />
            </th>
            <th id="mid-col">
                <img src="~/images/thumbmid.jpg" style="height: 20px;" />
            </th>
            <th id="down-col">
                 <img src="~/images/thumbdown.jpg" style="height: 20px;" />
            </th>
            <th class="StatusHeader" id="status" style="cursor: pointer;">
                Status
            </th>
        </tr>
    </thead>
    <tbody id="tBody" style="border-bottom: solid; border-width: 3px;">

@foreach (var item in Model)
{ 
        <tr title="@item.Review.Title" onclick="document.location = 'Images/View/@item.Review.ReviewId'" style="cursor:pointer; border-bottom:solid;border-bottom-width:1px;" >
                <td id="content" class="text-left">
                    <img style="max-height: 60px; max-width: 60px; margin:5px;" src="@item.Review.Thumbnail" />
                </td>
                <td id="title">
                    @{
                        if(item.Review.Title!= null) {
                         string defaultTitle = item.Review.Title;
                         string title = (defaultTitle.Length <= 100) ? defaultTitle : defaultTitle.Substring(0, 100) + "...";
                         @Html.DisplayFor(modelItem => title)
                        }
                    }
                </td>
                <td id="creator">
                    @{
                        var user = await UserManager.FindByIdAsync(item.Review.CreatorId);
                        @Html.DisplayFor(modelItem => user.ProfileName);
                     }
                </td>
                <td id="up-col">
                   @Html.DisplayFor(modelItem => item.approvals)
                </td>
                <td id="mid-col">
                    @Html.DisplayFor(modelItem => item.needsWorks)
                </td>
                <td id="down-col">
                    @Html.DisplayFor(modelItem => item.rejections)
                </td>     
                <td id="status">
                    @Html.DisplayFor(modelItem => item.Review.ReviewState)
                </td>
            </tr>
        }


    </tbody>
</table>

<script type="text/javascript" src="~/js/SortTable.js"></script>
<script type="text/javascript" src="~/js/Search.js"></script>